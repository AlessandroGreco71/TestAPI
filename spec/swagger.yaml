openapi: 3.0.1
info:
  title: TapClicks
  description: |-
  
    This is the first version of the API Specification for TapClicks

  version: '0.1'
  termsOfService: 'https://www.tapclicks.com/terms-of-use/'
  x-logo:
    url: 'https://jobs.mindtheproduct.com/wp-content/uploads/company_logos/2018/04/tapclicks_logo_png-250x93.png'
  
servers:
  - url: 'https://api.tapclicks.com/v2'
  
tags:
  - name: TapClicks API
    description: Welcome to Tap API
  - name: Business Units
    description: Refers to the Business Unit in the instance
  - name: Channels
    description: Refers to the Channels in the instance
  - name: Clients
    description: Refers to the Clients in the instance
  - name: Client's Categories
    description: Categories that can be assigned to a Client
  - name: Client Groups
    description: Referes to the Client Groups in the instance
  - name: Data Profiles
    description: Refers to the Data Profiles in the instance
  - name: Data Types
    description: All data types available for any field
  - name: Date Range
    description: Date range of the instance
  - name: Languages
    description: Supported languages
  - name: Leads
    description: Leads
  - name: Roles
    description: Roles
  - name: Services (Data Sources)
    description: Refers to Data Source in the instance
  - name: Users
    description: Refers to a user or users in the instance






  
paths:
  /:
    get:
      tags:
        - TapClicks API
      summary: Welcome Message
      description: This call will simply return a "Welcome to TAP API" message
      # security:
      #   - oauth2: []
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                  error:
                    type: boolean
                  warning:
                    type: array
                    items:
                      type: integer
                  status:
                    type: integer
                example:
                  data: "Welcome to TAP API"
                  error: false
                  warning: []
                  status: 200
        '400':
          description: Error on client's side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_400'
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'
                
# --------------------- Business Units --------------------------

  /clusters:
    get:
      tags:
        - Business Units
      summary: All Business Units
      description: Clusters are Business Units
        
        
        This returns a list of all the Business Units, active and inactive
      parameters:
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"      
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_clusters'
              example:
                data:
                  - id: 1
                    name: "West Coast Unit"
                    has_light_logo: false
                    has_dark_logo: false
                    external_cluster_id: ""
                    enable_inventory_group: false
                    status: "active"
                    status_display: "Active"
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'
                
# --------------------- Channels (Categories) --------------------------                
      
  /categories:
    get:
      tags:
        - Channels
      summary: All channels
      description: |
        Categories are the Channels. 
        
        This returns all the Channels, even the pre-defined Channels that are not active.
      parameters:
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_categories'
              example:
                data:
                  - id: "49"
                    name: "Custom Channel"
                    service_ids:
                      39: 
                        icon: "facebookads"
                        name: "Facebook Ads"
                        color: "#234589"
                        is_connected: true
                      100002:
                        icon: "custom-icon"
                        name: "Manually Uploaded"
                        color: "#234511"
                        is_connected: true
                error: false
                warnings: []
                status: 200
                    
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'

# --------------------- Clients --------------------------                  
                
  /clients:
    get:
      tags:
        - Clients
      summary: All Clients
      description: This returns all Clients, in any reporting status
      parameters:
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_clients'
              example:
                data:
                  - id: 1,
                    company_name: "JP Marketing"
                    first_name: "Jack"
                    last_name: "Smith"
                    email: "jsmith@JPmarketing.com"
                    address_1: "Rue Washington 66"
                    address_2: ""
                    city: "Minneapolis"
                    state: "Minnesota"
                    zip: "54201"
                    country: ""
                    phone: ""
                    fax: ""
                    website: "jpmark.com"
                    account_manager_user_id: null
                    has_light_logo: false
                    has_dark_logo: false
                    crm_id: ""
                    billing_id: ""
                    additional_details_1: ""
                    additional_details_2: ""
                    additional_details_3: ""
                    enable_lead_management_module: false
                    created_by_user_id: "1"
                    created_by_user: "jsmith@JPmarketing.com"
                    report_language: ""
                    source_service_id: null
                    creation_time: 1540478543
                    last_modification_time: 1540478543
                    cluster_id: null
                    default_reporting_profile_id: "1"
                    client_category_id: null
                    reporting_status: "active"
                    iotool_status: "presale"
                    has_hipaa_data: false
                    formatted_creation_time: "Oct 25, 2018 1:15 PM"
                    formatted_last_modification_time: "Oct 25, 2018 1:15 PM"
                    client_group_ids: []
                    activate_tapleads: false
                    reporting_status_display: "active"
                    iotool_status_display: "presale"
                error: false
                warnings: []
                status: 200                  
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'

    post:
      tags:
        - Clients
      summary: Create a Client
      requestBody:
        content:
          'multipart/form-data, boundary=----WebKitFormBoundarySMGbXJtM7VSNs0Nu':
            schema:
              $ref: "#/components/schemas/newClient"
            examples:
              '0':
                value: |-
                  ------WebKitFormBoundarySMGbXJtM7VSNs0Nu
                  Content-Disposition: form-data; name="model"

                  {
                  "company_name": "JP Marketing",
                  "default_reporting_profile_id": 1,
                  "reporting_status": "pending_mapping",
                  "iotool_status": "presale"
                  }
                  ------WebKitFormBoundarySMGbXJtM7VSNs0Nu--
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_new_edit_client_user'
              example:
                data:
                  id: 35
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'
      
        
        
  /clients/{client_id}:
    get:
      tags:
        - Clients
      summary: A specific Client
      description: This returns a specific Client (client_id)
      
      
        Note that if the path parameter "client_id" is omitted, this will return all the Clients in the instance.
      parameters:
        - in: path
          name: client_id
          schema:
            type: integer
          required: true
          description: Numeric Id of the Client to get. Please refer to <a href="#tag/Clients">Clients</a> to obtain the correct Id
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_clients'
              example:
                data:
                  - id: 1,
                    company_name: "JP Marketing"
                    first_name: "Jack"
                    last_name: "Smith"
                    email: "jsmith@JPmarketing.com"
                    address_1: "Rue Washington 66"
                    address_2: ""
                    city: "Minneapolis"
                    state: "Minnesota"
                    zip: "54201"
                    country: ""
                    phone: ""
                    fax: ""
                    website: "jpmark.com"
                    account_manager_user_id: null
                    has_light_logo: false
                    has_dark_logo: false
                    crm_id: ""
                    billing_id: ""
                    additional_details_1: ""
                    additional_details_2: ""
                    additional_details_3: ""
                    enable_lead_management_module: false
                    created_by_user_id: "1"
                    created_by_user: "jsmith@JPmarketing.com"
                    report_language: ""
                    source_service_id: null
                    creation_time: 1540478543
                    last_modification_time: 1540478543
                    cluster_id: null
                    default_reporting_profile_id: "1"
                    client_category_id: null
                    reporting_status: "active"
                    iotool_status: "presale"
                    has_hipaa_data: false
                    formatted_creation_time: "Oct 25, 2018 1:15 PM"
                    formatted_last_modification_time: "Oct 25, 2018 1:15 PM"
                    client_group_ids: []
                    activate_tapleads: false
                    reporting_status_display: "active"
                    iotool_status_display: "presale"
                error: false
                warnings: []
                status: 200     
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'
    post:
      tags:
        - Clients
      summary: Edit existing Client
      description: This is to modify the information of an existing Client
      parameters:
        - in: path
          name: client_id
          schema:
            type: integer
          required: true
          description: Numeric Id of the Client to get. Please refer to <a href="#tag/Clients">Clients</a> to obtain the correct Id
      requestBody:
        content:
          'multipart/form-data, boundary=----WebKitFormBoundarySMGbXJtM7VSNs0Nu':
            schema:
              $ref: "#/components/schemas/newClient"
            examples:
              '0':
                value: |-
                  ------WebKitFormBoundarySMGbXJtM7VSNs0Nu
                  Content-Disposition: form-data; name="model"

                  {
                  "company_name": "JP Marketing",
                  "default_reporting_profile_id": 1,
                  "reporting_status": "pending_mapping",
                  "iotool_status": "presale"
                  }
                  ------WebKitFormBoundarySMGbXJtM7VSNs0Nu--
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_new_edit_client_user'
              example:
                data:
                  id: 35
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'     
                
# --------------------- Client's Categories --------------------------  
  
  /clientcategories:
    get:
      tags:
        - Client's Categories
      summary: All Client's categories
      description: This returns a list of all possible categories that can be assigned to a client.
      
      
        For example --- Services, Automotive, Retailer, Restaurant...
      responses: 
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_clientcategories'
              example:
                data:
                  - id: 1
                    name: General
                error: false
                warnings: []
                status: 200   
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'       

# --------------------- Client Groups --------------------------        
                  
  /clientgroups:
    get:
      tags:
        - Client Groups
      summary: All Client Groups
      description: This returns a list of all Groups of Clients
      # operationId: getClientGroups
      parameters:
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"      
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_clientgroups'
              example:
                data:
                  - id: "1"
                    name: "Test Unit"
                    cluster_id: null
                    group_type: "group_of_clients"
                    has_light_logo: false
                    has_dark_logo: false
                    created_at: 1540404023
                    updated_at: 1540404023
                    formatted_created_at: "Oct 24, 2018 6:00 PM"
                    formatted_updated_at: "Oct 24, 2018 6:00 PM"
                    client_ids: [1]
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'
        
# --------------------- Data Profiles -------------------------- 

  /reportingprofiles:
    get:
      tags:
        - Data Profiles
      summary: All Data Profiles
      description: This returns all the Data Profiles that are available in the instance
      parameters:
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"  
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_dataprofiles'
              example:
                data:
                  - id: 1
                    name: "Default Profile"
                    created_at: 1378100067
                    updated_at: 1435939300
                    enable_new_services_by_default: true
                    enable_scores: false
                    adwords_split_active: false
                    hide_adwords_network: false
                    cluster_id: null
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'
                
# --------------------- Data Types --------------------------                 
  
  /columns/datatypes:
    get:
      tags:
        - Data Types
      summary: All data types
      description: This returns all the data types that are available for any field
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_datatypes'
              example:
                data:
                  - key: "integer"
                    value: "Number"
                    icon: "#"
                    is_selectable: true
                    is_numeric: true
                    precision: 0
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'     
                
# --------------------- Date Range --------------------------                  
  /daterange:
    get:
      tags:
        - Date Range
      summary: Date range
      description: This returns the current set date range
      responses: 
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_daterange'
              example:
                data:
                  start: 1541894432
                  end: 1541894431
                  relative_date_range: null
                  comparison_start: 1541894432
                  comparison_end: 1541894431
                  comparison_active: null
                  comparison_period: null
                error: false
                warnings: []
                status: 200
            
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401' 
                
# --------------------- Languages --------------------------                 
  /languages:
    get:
      tags:
        - Languages
      summary: All supported languages
      description: This returns a list of all supported languages
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_languages'
              example:
                data: 
                  - locale: "en_US"
                    name: "English"
                  
                  - locale: "fr_CA"
                    name: "French"
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'   
                
# --------------------- Leads --------------------------    
  /leads:
    get:
      tags:
        - Leads
      summary: All leads
      description: This returns all the leads in the instance
      parameters:
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"        
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_leads'
              example:
                data:
                  - id: 1
                    service_lead_id: 10901
                    service_id: 55
                    service_name: "CallCap"
                    type: "call"
                    status: "Visible"
                    campaign_id: 32
                    campaign_name: "Hyland Hills - Email"
                    client_id: 13
                    first_name: null
                    last_name: null
                    caller_name: "8002782420"
                    end_customer_id: null
                    customer_number: "800-278-2420"
                    duration: null
                    customer_email: null
                    call_status: "Blocked"
                    grade: null
                    notes: null
                    call_was_recorded: "Not recorded"
                    timestamp: "Oct 20, 2018 1:56 PM"
                    lead_id: 10901
                    source_name: null
                    source_type: null
                    client_name: "callcap-hyland-hills"
                    customer_name: null
                    row_grouping_count: 1
                    can_be_edited: true
                    can_be_deleted: false
                    can_be_cloned: false
                    iso_timestamp: "2018-10-20T13:56:13Z"
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'  
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_403"      

  /leads/{lead_id}:
    get:
      tags:
        - Leads
      summary: A specific lead
      description: This returns a specific lead (lead_id). 
        
        
        Note that if the path parameter "lead_id" is omitted, this will return a list of all the leads in the instance
      parameters:
        - in: path
          name: lead_id
          schema:
            type: integer
          required: true
          description: Numeric Id of the lead to get
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/fields"
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_leads'
              example:
                data:
                  - id: 1
                    service_lead_id: 10901
                    service_id: 55
                    service_name: "CallCap"
                    type: "call"
                    status: "Visible"
                    campaign_id: 32
                    campaign_name: "Hyland Hills - Email"
                    client_id: 13
                    first_name: null
                    last_name: null
                    caller_name: "8002782420"
                    end_customer_id: null
                    customer_number: "800-278-2420"
                    duration: null
                    customer_email: null
                    call_status: "Blocked"
                    grade: null
                    notes: null
                    call_was_recorded: "Not recorded"
                    timestamp: "Oct 20, 2018 1:56 PM"
                    lead_id: 10901
                    source_name: null
                    source_type: null
                    client_name: "callcap-hyland-hills"
                    customer_name: null
                    row_grouping_count: 1
                    can_be_edited: true
                    can_be_deleted: false
                    can_be_cloned: false
                    iso_timestamp: "2018-10-20T13:56:13Z"
                error: false
                warnings: []
                status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'  
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_403"
                
# --------------------- Role --------------------------  
  /roles/{role_id}:
    get:
      tags:
        - Roles
      summary: A IOTool user role
      description: This returns a specific role (role_id) that can be assigned to a user who has the IO tool module enabled.
      
      
        Note that if the path parameter "role_id" is omitted, this will return a list of all the roles that can be assigned to the IOTool user
      parameters:
        - in: path
          name: role_id
          schema:
            type: integer
          required: true
          description: Numeric Id of the role to get. If omitted, it will return all roles  
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/sort"        
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_roles'
              example:
                data:
                  - id: 2
                    name: "Sales"
                    role_type: "io_tool"
                    cluster_id: null
                    row_grouping_count: 1
                    can_be_edited: true
                    can_be_deleted: false
                    can_be_cloned: false
                error: false
                warnings: []
                status: 200
                
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'        

      
# --------------------- Services (Data Sources) --------------------------        

  /services/{service_id}:
    get:
      tags:
        - Services (Data Sources)
      summary: All OR a specific service
      description: 
        Services are the Data Sources that a client can connect to pull data into TapClicks; these also include all the resources that were created with the Smart Connector
        
        
        This API call returns a specific service ("service_id") in the instance. This can be helpful to find out if such is connected or not.
        
        
        Note that if the path parameter "service_id" is omitted, this will return a list of all the services available in the instance, whether they're connected or not.
      parameters:
        - in: path
          name: service_id
          schema:
            type: integer
          required: true
          description: Numeric Id of the service to get. If omitted, it will return all services 
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"          
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_services'
              example:
                data:
                  - service_id: 44
                    name: "Facebook Insights"
                    is_connected: true
                error: false
                warnings: []
                status: 200                  
                
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401' 
                
  /services/{id}/data/{data_view_id}/{field}:
    get:
      tags:
        - Services (Data Sources)
      summary: Data for a service
      description: This returns the data of a specific field of a specific service
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the service to get
        - in: path
          name: data_view_id
          schema:
            type: string
          required: true
          description: Data view id the column belongs to
        - in: path
          name: field
          schema:
            type: string
          required: true
          description: Field names of column to fetch
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/groupby"
        - $ref: "#/components/parameters/timegrouping"
        - $ref: "#/components/parameters/aggregate"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/row_count"
        - $ref: "#/components/parameters/daterange"
        - $ref: "#/components/parameters/nested"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_servicesdataview'
              # This is an example for /services/id/data  
              # example:
              #   data:
              #     customer_id: 7
              #     campaign: 27
              #     column1: "JL Ads"
              #     column2: "Keebler, Windler and Yundt"
              #     column3: "Durango"
              #     column4: "Dodge"
              #     AVG(score): 0.0000
              #     client_name: "JL Ads"
              #     _client_city: ""
              #     _client_state: ""
              #     _client_zip_code: ""
              #     client_reporting_status: "active"
              #     client_billing_id: ""
              #     client_additional_details_1: ""
              #     client_additional_details_2: ""
              #     client_additional_details_3: ""
              #     client_crm_id: ""
              #     _client_cluster_name: null
              #     _client_account_manager: null
              #     _client_category: null
              #   error: false
              #   warnings: []
              #   status: 200
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401' 


        
                
  /services/info/{id}:
    get:
      tags:
        - Services (Data Sources)
      summary: General info on One or All Services
      description: This returns general information regarding a Service
        
        
        Note that if the path parameter "id" is omitted, this will return a list of all the information of all services.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the service to get. If omitted, it will return all the information of all the services
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"          
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_servicesinfo'
              example:
                data:
                  id: 1
                  service_id: 110
                  connect_steps: null
                  categories: "display, demand side platform (dsp), ad server, yield management tools, programmatic"
                  keywords: "ad serving, advertising technology, ad operations, demand-side platform"
                  summary: "AdGear Technologies, Inc. is a digital advertising technology company, providing software and services for the digital media industry. The company's full-stack advertising platform offers customers advanced advertising analytics, attribution measurement, ad serving, real-time bidding and exchange technology. AdGear"
                  company_size: "11-50 employees"
                  links:
                    Website: "www.adgear.com"
                    Sign Up: ""
                    Contact: "http://adgear.com/company/offices"
                    Newsletter: ""
                    Demo Request: ""
                    Free Trial: ""
                    Promotions:
                      null: ""
                error: false
                warnings: []
                status: 200
                
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'  
        
  /services/orderitems/{order_item_id}:
    get:
      tags:
        - Services (Data Sources)
      summary: All OR a specific order item
      description: This returns an order item (order_item_id)
          
          
        Note that if the path parameter "order_item_id" is omitted, this will return a list of all the order items in the instance.
      parameters:
        - in: path
          name: order_item_id
          schema:
            type: integer
          required: true
          description: Numeric Id of the order item to get. If omitted, it will return all order items 
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/groupby"
        - $ref: "#/components/parameters/timegrouping"
        - $ref: "#/components/parameters/aggregate"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/row_count"
        - $ref: "#/components/parameters/daterange"
        - $ref: "#/components/parameters/nested"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/response_200_servicesorderitem'
              example:
                data:
                  - id: 2
                    service_id: 45
                    customer_id: 5
                    item_id: 3
                    mapping_date: "Sept 25, 20187"
                    connection_setting_id: 3
                    first_level_mapping: 3
                    second_level_mapping: ""
                error: false
                warnings: []
                status: 200
                
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'         
      
                
                
# --------------------- Users --------------------------  
                
  /users:
    get:
      tags:
        - Users
      summary: All Users
      description: This returns all users, whether they're active or inactive
      parameters:
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"
        
      # operationId: getUsers
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_users'
              example:
                data:
                  - id: 1
                    client_id: null
                    user_type: "superadmin"
                    company_name: null
                    first_name: "Jack"
                    last_name: "Smith"
                    address_1: ""
                    address_2: ""
                    city: ""
                    state: ""
                    zip: ""
                    phone: ""
                    email: "jsmith@jpmarketing.com"
                    cluster_id: null
                    external_user_id: ""
                    additional_details_1: ""
                    additional_details_2: ""
                    additional_details_3: ""
                    enable_io_tool_module: true
                    enable_lead_management_module: false
                    has_light_logo: false
                    has_dark_logo: false
                    override_dashboard_pages_from_reporting_profile: false
                    default_home_page: null
                    io_tool_notification_frequency: null
                    country: ""
                    timezone: "default"
                    status: "active"
                    hipaa_acknowledgement_timestamp: null
                    creation_time: 1540403488
                    show_services_overview: "default"
                    show_categories_overview: "default"
                    role_id: null
                    io_tool_role_id: 6
                    client_group_id: null
                    reporting_profile_id: 8
                    user_type_display: "Super Admin"
                    country_display: ""
                    timezone_display: "default"
                    status_display: "active"
                    formatted_creation_time: "Sept 24, 2018 2:14 PM"
                error: false
                warnings: []
                status: 200                
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'
        '404':
          description: API Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_404'
 
    post:
      tags:
        - Users
      summary: Create a user
      requestBody:
        content:
          'multipart/form-data, boundary=----WebKitFormBoundarySMGbXJtM7VSNs0Nu':
            schema:
              $ref: "#/components/schemas/user"
            examples:
              '0':
                value: |-
                  ------WebKitFormBoundarySMGbXJtM7VSNs0Nu
                  Content-Disposition: form-data; name="model"

                  {
                  "user_type": "agent",
                  "email": "TestingFromSwaggerInsp@email.com",
                  "password": "user1234",
                  "first_name": "John",
                  "last_name": "Doe",
                  "reporting_profile_id": 1,
                  "client_group_id": 1,
                  "role_id": 1,
                  "status": "active"
                  }
                  ------WebKitFormBoundarySMGbXJtM7VSNs0Nu--
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_new_edit_client_user'
              example:
                data:
                  id: 35
                error: false
                warnings: []
                status: 200
                
  /users/{user_id}:
    get:
      tags:
        - Users
      summary: A specific user
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: Numeric Id of the user to get
        - $ref: "#/components/parameters/metadata"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/field_data_filter"
      #  - $ref: "#/components/parameters/filter_values"
      responses:
        '200':
          description: Ok Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_users'
              example:
                data:
                  - id: 1
                    client_id: null
                    user_type: "superadmin"
                    company_name: null
                    first_name: "Jack"
                    last_name: "Smith"
                    address_1: ""
                    address_2: ""
                    city: ""
                    state: ""
                    zip: ""
                    phone: ""
                    email: "jsmith@jpmarketing.com"
                    cluster_id: null
                    external_user_id: ""
                    additional_details_1: ""
                    additional_details_2: ""
                    additional_details_3: ""
                    enable_io_tool_module: true
                    enable_lead_management_module: false
                    has_light_logo: false
                    has_dark_logo: false
                    override_dashboard_pages_from_reporting_profile: false
                    default_home_page: null
                    io_tool_notification_frequency: null
                    country: ""
                    timezone: "default"
                    status: "active"
                    hipaa_acknowledgement_timestamp: null
                    creation_time: 1540403488
                    show_services_overview: "default"
                    show_categories_overview: "default"
                    role_id: null
                    io_tool_role_id: 6
                    client_group_id: null
                    reporting_profile_id: 8
                    user_type_display: "Super Admin"
                    country_display: ""
                    timezone_display: "default"
                    status_display: "active"
                    formatted_creation_time: "Sept 24, 2018 2:14 PM"
                error: false
                warnings: []
                status: 200 
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_401'
                
    post:
      tags:
        - Users
      summary: Edit an existing user
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: Numeric Id of the user that needs to be edited
      requestBody:
        content:
          'multipart/form-data, boundary=----WebKitFormBoundarySMGbXJtM7VSNs0Nu':
            schema:
              $ref: "#/components/schemas/user"
            examples:
              '0':
                value: |-
                  ------WebKitFormBoundarySMGbXJtM7VSNs0Nu
                  Content-Disposition: form-data; name="model"

                  {
                  "user_type": "agent",
                  "email": "TestingFromSwaggerInsp@email.com",
                  "password": "user1234",
                  "first_name": "John",
                  "last_name": "Doe",
                  "reporting_profile_id": 1,
                  "client_group_id": 1,
                  "role_id": 1,
                  "status": "active"
                  }
                  ------WebKitFormBoundarySMGbXJtM7VSNs0Nu--
      responses:
        '200':
          description: Ok - Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_200_new_edit_client_user'
              example:
                data:
                  id: 35
                error: false
                warnings: []
                status: 200  
              
              
              
              
# ---------------- QUERY PARAMETERS ------------------------
components:
  parameters:
    metadata:  
      in: query
      name: metadata
      required: false
      schema:
        type: integer
        enum: [0,1]
      description: The API will provide more or all the info for the available fields.
      example: https://<span></span>api.tapclicks.com/v2/services/34?metadata=1

    page:
      in: query
      name: page
      required: false
      schema:
        type: string
      description: The example will return the first five records
        
        
        This will limit the number of rows in the fetch result
        #2. It will return 6 records, starting from the 13th
      example: https://api.tapclicks.com/v2/34/data/cgn?page=0,5
        #2- https://api.tapclicks.com/v2/34/data/cgn?page=2,6 
        
    groupby:
      in: query
      name: groupby
      required: false
      schema:
        type: string
      description: The results will be grouped based on the provided field
      example: https://api.tapclicks.com/v2/services?groupby=name,customer_id
      
    timegrouping:
      in: query
      name: timegrouping
      required: false
      schema:
        type: string
        enum: [yearly, monthly, weekly, daily, hourly]
      description: The results will be narrowed within the specified timegroup
      example: https://[...]/v2/services/34/data/cgn=?timegrouping=weekly
      
    aggregate:
      in: query
      name: aggregate
      required: false
      schema:
        type: boolean
      description: The results will be the aggregated value of each field
      example: https://api.tapclicks.com/v2/services/34/data/cgn?aggregate=true
      
    fields:
      in: query
      name: fields
      required: false
      schema:
        type: string
      description: This will filter the result data with the specific fields
      example: https://api.tapclicks.com/v2/34/data/cgn?fields=CTR,ClickCount
      
    sort:
      in: query
      name: sort
      required: false
      schema: 
        type: string
      description: Ascending by default; prefix **-** for descending
      
      
        This will sort the results based on the specific field and sort order.
      example: https://api.tapclicks.com/v2/34/data/cgn?sort=-ClickCount
      
    count:
      in: query
      name: count
      required: false
      schema:
        type: integer
        enum: [0,1]
      description: The API will provide a total number of records in the result
      example: http://api.tapclicks.com/34/data/cgn?count=1
      
    row_count:
      in: query
      name: row_count
      required: false
      schema:
        type: string
      description: Passing **row_count** along with the list of fields will provide grouped result and row count on each group
      example: https://[...]/cgn=?groupby=campaign_id&fields=ClickCount,row_count
      
    daterange:
      in: query
      name: daterange
      required: false
      schema:
        type: string
      description: This filters the result between the given date range
      example: https://[...]/cgn?daterange=2018-06-02|2018-10-22
      
    nested:
      in: query
      name: nested
      required: false
      schema:
        type: integer
        enum: [0,1]
      description: Fetch grouped data that nested based on the groupby expression
      example: https://[...]/cgn?groupby=campaign_name&nested=1
      
    field_data_filter:
      in: query
      name: field data filter
      required: false
      schema:
        type: string
      description: This will filter the data that contains only specific values.
      
      
        To remove items use **!**
      example: https://[...]/cgn?customer_id=4,!3,8
      
    # This is not being used right now; same as field_data_filter?!  
    filter_values:
      in: query
      name: filter values
      required: false
      schema:
        type: string
      description: This will filter the data with any available fields and expected values
      example: https://[...]/cgn?page=0,50&period=day&campaign_status=enabled



  schemas:
# --------------- Business Unit Model -----------------     
    cluster:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        has_light_logo:
          type: boolean
        has_dark_logo:
          type: boolean
        external_cluster_id:
          type: integer
        enable_inventory_calendar:
          type: boolean
        is_cluster_group:
          type: boolean
        status:
          type: string
          enum: [active, inactive]
        status_display:
          type: string
          enum: [Active, Inactive]
            
# --------------- Channel Model ----------------- 
    category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        services_ids:
          type: object
          properties:
            service_id:
              type: object
              properties:
                icon:
                  type: string
                name:
                  type: string
                color:
                  type: string
                is_connected:
                  type: boolean
        color:
          type: string
        custom_icon:
          type: string
        is_predefined:
          type: boolean
        category_key:
          type: string
        unique_id:
          type: string
        is_connected:
          type: boolean
      
      

# --------------- Creates New Client Model - (missing: id, has_light_logo, has_dark_logo, created_by_user, created_by_user_id, formatted_creation_time, formatted_last_modification_time, creation_time, last_modification_time)  ----------------- 

    newClient:
      type: object
      required:
      - company_name
      - reporting_status
      - iotool_status
      - default_reporting_profile_id
      properties:
        company_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        address_1:
          type: string
        address_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        fax:
          type: string
        website:
          type: string
        account_manager_user_id:
          type: integer
        crm_id:
          type: integer
        billing_id:
          type: integer
        additional_details_1:
          type: string
        additional_details_2:
          type: string
        additional_details_3:
          type: string
        enable_lead_management_module:
          type: boolean
          default: false
        report_language:
          type: string
        source_service_id:
          type: integer
        cluster_id:
          type: integer
        default_reporting_profile_id:
          type: integer
        client_category_id:
          type: integer
        reporting_status:
          type: string
          enum: [pending_mapping, active, hold, terminated]
          default: pending_mapping
        iotool_status:
          type: string
          enum: [presale, active, inactive, terminated]
          default: presale
        has_hipaa_data:
          type: boolean
        client_group_ids:
          type: array
          items: 
            type: integer
        activate_tapleads:
          type: boolean
        reporting_status_display:
          type: string
          enum: [pending_mapping, active, hold, terminated]
        iotool_status_display:
          type: string
          enum: [pending_mapping, active, hold, terminated]
          
# --------------- Client Model (Edit existing client) ----------------- 
    client:
      type: object
      required:
      - company_name
      - reporting_status
      - iotool_status
      - default_reporting_profile_id
      properties:
        id:
          type: integer
          description: Client Id
        company_name:
          type: string
          description: Company Name
        first_name:
          type: string
          description: First Name
        last_name:
          type: string
          description: Last Name
        email:
          type: string
          description: Email
        address_1:
          type: string
          description: Address 1
        address_2:
          type: string
          description: Address 2
        city:
          type: string
          description: City
        state:
          type: string
          description: State
        zip:
          type: string
          description: Zip/Postal Code
        country:
          type: string
          description: Country
        phone:
          type: string
          description: Phone number
        fax:
          type: string
          description: Fax number
        website:
          type: string
          description: Website
        account_manager_user_id:
          type: integer
          description: Account Manager User Id
        has_light_logo:
          type: boolean
          description: Has light logo
          default: false
        has_dark_logo":
          type: boolean
          default: false
          description: Has dark logo
        crm_id:
          type: integer
          description: CRM Id
        billing_id:
          type: integer
          description: Billing Id
        additional_details_1:
          type: string
          description: Additional details 1
        additional_details_2:
          type: string
          description: Additional details 2
        additional_details_3:
          type: string
          description: Additional details 3
        enable_lead_management_module:
          type: boolean
          default: false
          description: Enable Lead Management module for this Client
        created_by_user_id:
          type: integer
          description: Created by User Id
        created_by_user:
          type: string
          description: Created by User
        report_language:
          type: string
          description: Report language (if available)
        source_service_id:
          type: integer
          description: Source service Id
        creation_time:
          type: integer
          description: Creation time
        last_modification_time:
          type: integer
          description: Time of last modification
        cluster_id:
          type: integer
          description: Business Unit Id
        default_reporting_profile_id:
          type: integer
          description: Please refer to <a href="#tag/Data-Profiles">Data Profiles</a> to obtain a list of all reporting profiles
        client_category_id:
          type: integer
          description: Client Category Id
        reporting_status:
          type: string
          enum: [pending_mapping, active, hold, terminated]
          default: pending_mapping
          description: Reporting status
        iotool_status:
          type: string
          enum: [presale, active, inactive, terminated]
          default: presale
          description: TapOrders status
        has_hipaa_data:
          type: boolean
          description: Has hippa data
        formatted_creation_time:
          type: string
          description: Formatted creation time
        formatted_last_modification_time:
          type: string
          description: Formatted last modification time
        client_group_ids:
          type: array
          items: 
            type: integer
            description: Client Group Id
        activate_tapleads:
          type: boolean
          description: Activate TapLeads
        reporting_status_display:
          type: string
          enum: [pending_mapping, active, hold, terminated]
          description:  Reporting status display
        iotool_status_display:
          type: string
          enum: [pending_mapping, active, hold, terminated]
          description: TapOrders status display
          
    
# --------------- Client Category Model -----------------     
    clientCategory:
      type: object
      properties:
        id:
          type: integer
          description: Client Category Id
        name:
          type: string
          description: Client Category
      
# --------------- Client Group Model -----------------         
    clientGroup:
      type: object
      properties:
        id:
          type: integer
          description: Client Group Id
        name:
          type: string
          description: Client Group
        cluster_id:
          type: integer
          description: Business Unit Id
        group_type:
          type: string
          enum: [group_of_clients, group_of_client_group]
          description: Type
        has_light_logo:
          type: boolean
          description: Has light logo
        has_dark_logo:
          type: boolean
          description: Has dark logo
        created_at:
          type: integer
          description: Creation time
        updated at:
          type: integer
          description: Updated time
        formatted_created_at: 
          type: string
          description: Formatted creation time
        formatted_updated_at:
          type: string
          description: Formatted updated time
        client_ids:
          type: array
          items: 
            type: integer
          description: Clients Ids
      example:
        data:
          id: "1"
          name: "Test Unit"
          cluster_id: null
          group_type: "group_of_clients"
          has_light_logo: false
          has_dark_logo: false
          created_at: 1540404023
          updated_at: 1540404023
          formatted_created_at: "Oct 24, 2018 6:00 PM"
          formatted_updated_at: "Oct 24, 2018 6:00 PM"
          client_ids: [1]      
  
# --------------- Data Profile Model -----------------          
    dataProfile:
      type: object
      properties:
        id:
          type: integer
          description: Data Profile Id
        name:
          type: string
          description: Data Profile
        created_at:
          type: integer
          description: Creation time
        updated_at:
          type: integer
          description: Updated time
        enable_new_services_by_default:
          type: boolean
          description: Enable new services by default
        enable_scores:
          type: boolean
          description: Enable scores
        adwords_split_active:
          type: boolean
          description: Adwords split active
        hide_adwords_network:
          type: boolean
          description: Hide adwords active
        cluster_id:
          type: integer
          description: Business Unit Id
        
# --------------- Data Type Model -----------------         
    dataType:
      type: object
      properties:
        key:
          type: string
          enum: [integer, decimal, percent, currency, string, phonenumber, callback, date, time, link, url, image, datetime, id, bool]
          description: Key
        value:
          type: string
          enum: [Number, Decimal, Percent, Currency, Text, Phone_Number, Date, Time, Link, URL, Image, Id, Boolean]
          description: Value
        icon:
          type: string
          description: Icon
        is_selectable:
          type: boolean
          description: Is selectable
        is_numeric:
          type: boolean
          description: Is numeric
        precision:
          type: integer  
          description: Precision
  
# --------------- Date Range Model -----------------  
    dateRange:
      type: object
      properties:
        start:
          type: integer
          description: Start
        end:
          type: integer
          description: End
        relative_date_range:
          type: integer
          description: Relative date range
        comparison_start:
          type: integer
          description: Comparison start
        comparison_end:
          type: integer
          description: Comparison end
        comparison_active:
          type: integer
          description: Comparison Active
        comparison_period:
          type: integer
          description: Comparison Period
          
# --------------- Language Model -----------------           
    language:
      type: object
      properties:
        locale:
          type: string
          description: Locale
        name:
          type: string
          description: Name
          
# --------------- Lead Model -----------------  
    lead:
      type: object
      properties:
        id:
          type: integer
        service_lead_id:
          type: integer
        service_id:
          type: integer
        service_name:
          type: string
        type:
          type: string
        status:
          type: string
        campaign_id:
          type: integer
        campaign_name:
          type: string
        client_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        caller_name: 
          type: string
        end_customer_id:
          type: string
        customer_number:
          type: string
        duration:
          type: string
        customer_email:
          type: string
        call_status:
          type: string
        grade:
          type: string
        notes: 
          type: string
        call_was_recorded:
          type: string
        timestamp:
          type: string
        lead_id:
          type: integer
        source_name:
          type: string
        source_type:
          type: string
        client_name:
          type: string
        customer_name: 
          type: string
        row_grouping_count: 
          type: integer
        can_be_edited:
          type: boolean
        can_be_deleted: 
          type: boolean
        can_be_cloned: 
          type: boolean
        iso_timestamp:
          type: string

# --------------- Order Item Model ----------------- 
    orderItem:
      type: object
      properties:
        id:
          type: integer
          description: Order item Id
        service_id:
          type: integer
          description: Service Id
        customer_id:
          type: integer
          description: Customer Id
        item_id:
          type: integer
          description: Item Id
        mapping_date:
          type: string
          description: Mapping date
        connection_setting_id:
          type: integer
          description: Connection setting Id
        first_level_mapping:
          type: integer
          description: First level mapping
        second_level_mapping:
          type: integer
          description: Second level mapping

          
# --------------- Role Model -----------------            
    role:
      type: object
      properties:
        id:
          type: integer
          description: Role Id
        name:
          type: string
          description: Name
        role_type:
          type: string
          description: Role type
        cluster_id:
          type: integer
          description: Business Unit Id
        reporting_template_ids:
          type: array
          items:
            type: integer
          description: Reporting Template Ids
        manage_dashboard:
          type: boolean
          description: Manage dashboard
        can_manage_alerts:
          type: boolean
          description: Can manage alerts
          

            
# --------------- Simple Service (Data Sources) Model -----------------  
    simpleService:
      type: object
      properties:
        service_id:
          type: integer
          description: Service Id
        name:
          type: string
          description: Name
        is_connected:
          type: boolean
          description: Is connected
            
# --------------- Service Information (Data Sources) Model -----------------
    serviceInfo:
      type: object
      properties:
        id:
          type: integer
          description: Id
        service_id:
          type: integer
          description: Service Id
        connect_steps:
          type: string
          description: Connect steps
        categories:
          type: string
          description: Categories
        keywords:
          type: string
          description: Keywords
        summary:
          type: string
          description: Summary
        company_size:
          type: string
          description: Company size
        links:
          type: object
          description: Links
          properties:
            Website:
              type: string
              description: Website
            Sign Up:
              type: string
              description: Sign Up
            Contact:
              type: string
              description: Contact
            Newsletter:
              type: string
              description: Newsletter
            Demo Request:
              type: string
              description: Demo request
            Free Trial:
              type: string
              description: Free trial
            Promotions:
              type: object
              description: Promotions
              properties:
                null:
                  type: string
                  description: Properties 
                  
# --------------- ServiceDataViewField (Data Sources) Model -----------------                  
    serviceDataViewField:
      type: object
      properties: 
        is_href:
          type: string
        callback_fn:
          type: string
        is_callback_only:
          type: string
        extra_settings:
          type: string
        sub_columns:
          type: string
        attribute_for_categories:
          type: string
        field:
          type: string
        label:
          type: string
        format:
          type: string
        values:
          type: array
          items: 
            type: string
        has_set_values:
          type: boolean
        value_data_source_type:
          type: string
        order: 
          type: integer
        summary_order:
          type: integer
        sortable: 
          type: boolean
        custom_sort:
          type: string
        tooltip: 
          type: string
        placeholder:
          type: string
        custom_error_ms:
          type: string
        preprocess_type:
          type: string
        postprocess_type:
          type: string
        edit_control_type: 
          type: string
        is_custom_edit_control:
          type: boolean
        ignore_save:
          type: boolean
        ignore_set_data:
          type: boolean
        is_unique: 
          type: boolean
        is_required: 
          type: boolean
        is_read_only: 
          type: boolean
        is_selectable:
          type: boolean
        allows_null_value: 
          type: boolean
        return_null_values:
          type: boolean
        is_summary: 
          type: boolean
        is_hidden: 
          type: boolean
        is_hidden_in_details: 
          type: boolean
        is_primary_key: 
          type: boolean
        is_primary_name_field: 
          type: boolean
        is_primary_date_field: 
          type: boolean
        is_foreign_key: 
          type: boolean
        is_foreign_field: 
          type: boolean
        foreign_mapping: 
          type: string
        alternate_field: 
          type: string
        field_alias:
          type: string
        is_pseudo:
          type: boolean
        is_helper:
          type: boolean
        is_virtual:
          type: boolean
        is_extra:
          type: boolean
        is_api_safe:
          type: boolean
        is_groupable:
          type: boolean
        is_filterable:
          type: boolean
        groupby_id_field:
          type: string
        groupby_name_field:
          type: string
        groupby_field_format:
          type: string
        is_groupby_name_field:
          type: boolean
        show_on_group_by:
          type: boolean
        query:
          type: string
        aggregate_query:
          type: string
        table_relationship:
          type: string
        table_prefix: 
          type: string
        is_metric:
          type: boolean
        is_numeric:
          type: boolean
        precision: 
          type: string          
        is_required_field:
          type: boolean
        extra_parameters:       
          type: array
          items:
            type: string
        force_in_select:
          type: boolean
        is_private:
          type: boolean
        enable_history:
          type: boolean
        is_taggable:
          type: boolean
        tag_default_value:
          type: string
        custom_distinct_values: 
          type: string
        is_naming_convention_identifier:
          type: boolean
        error:
          type: boolean
        owa_field_alias:
          type: string
        dependencies: 
          type: array
          items:
            type: string
            
              

# --------------- DataView Result Model ----------------- 

# --------------- Field Result Model ----------------- 

            
            
# --------------- User Model -----------------    
    user:
      type: object
      required: 
        - first_name
        - last_name
        - user_type
        - email
        - password
        - client_group_id
        - status
        - role_id
        - reporting_profile_id
      properties:
        id:
          type: integer
          description: User Id
        client_id: 
          type: integer
          description: Client Id - This is mandatory when user_type = "client"
        user_type:
          type: string
          enum: [client, agent, superadmin, clusteradmin]
          default: client
          description: User type
          # description: Link to be added here please refer to <a href="#tag/Roles">TYPE</a> to obtain all possible role types and ids
        company_name: 
          type: string
          description: Company Name
        first_name:
          type: string
          description: First Name
        last_name:
          type: string
          description: Last Name
        address_1:
          type: string
          description: Address 1
        address_2:
          type: string
          description: Address 2
        city:
          type: string
          description: City
        state:
          type: string
          description: State
        zip:
          type: string
          description: Zip/Postal Code
        phone:
          type: string
          description: Phone number
        email:
          type: string
          description: Email address
        password:
          type: string
          description: Password
        cluster_id:
          type: integer
          description: Please refer to <a href="#tag/Business-Units">Business Units</a> to obtain all of the exisiting business unit id
        external_user_id:
          type: integer
          description: External User Id
        additional_details_1:
          type: string
          description: Additional Details 1
        additional_details_2:
          type: string
          description: Additional Details 2
        additional_details_3:
          type: string
          description: Additional Details 3
        enable_io_tool_module:
          type: boolean
          description: Enable IOTool Module
        enable_lead_management_module:
          type: boolean
          description: Enable Lead Management Module
        has_light_logo:
          type: boolean
          description: Has light logo
        has_dark_logo:
          type: boolean
          description: Has dark logo
        override_dashboard_pages_from_reporting_profile:
          type: boolean
          description: Override dashboard pages from reporting profile
        default_home_page:
          type: string
          description: Default home page
        io_tool_notification_frequency:
          type: string
          enum: [never, real_time, daily, weekly, monthly]
          default: null
          description: IOTool notification frequency
        country:
          type: string
          description: Country
        timezone:
          type: string 
          # there could be a link to a different schema, instead of enum
          default: default
          description: Timezone
        status:
          type: string
          enum: [active, inactive]
          description: Status
        hipaa_acknowledgement_timestamp:
          type: string
          description: Hipaa ackowledgement timestamp
        creation_time:
          type: integer
          description: Creation time
        show_services_overview: 
          type: string
          default: default
          description: Show services overview
        show_categories_overview:
          type: string
          default: default
          description: Show categories overview
        role_id:
          type: integer
          description: Please refer to <a href="#tag/Roles">Roles</a> to obtain all possible role types and ids
        io_tool_role_id:
          type: integer
          description: Please refer to <a href="#tag/Roles">Roles</a> to obtain all possible role types and ids
        client_group_id:
          type: integer
          description: This is mandatory when user_type = "agent". Please refer to <a href="#tag/Client-Groups">Client Groups</a> to obtain all existing client group id
        reporting_profile_id:
          type: integer
          default: 1
          description: Please refer to <a href="#tag/Data-Profiles">Data Profiles</a> to obtain all of the exisiting data profile id
        user_type_display: 
          type: string
          enum: [Super Admin, Business Unit Admin, Agent, Client]
          description: User type display
        country_display:
          type: string
          description: Country display
        timezone_display: 
          type: string
          description: Timezone display
        status_display:
          type: string
          enum: [active, inactive]
          description: Status display
        formatted_creation_time:
          type: string
          description: Formatted creation time
          

# --------------- Error Msg/Responses Model-----------------  

    error_400:
      type: object
      properties:
        fault:
          type: object
          properties:
            faultstring:
              type: string
            detail:
              type: object
              properties:
                errorcode:
                  type: string
      example: 
        fault:
          faultstring: 'Unable to identify proxy for host: https_vhost and url/: /v'
          detail:
            errorcode: 'keymanagement.service.invalid_access_token'
    error_401:
      type: object
      properties:
        fault:
          type: object
          properties:
            faultstring:
              type: string
            detail:
              type: object
              properties:
                errorcode:
                  type: string
      example: 
        fault:
          faultstring: 'Invalid Access Token'
          detail:
            errorcode: 'keymanagement.service.invalid_access_token'
    
    error_403:
      type: object
      properties:
        error:
          type: boolean
        data:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        status:
          type: integer
      example:
        error: true
        data: 
          - "You are not allowed to use this feature"
        warnings: []
        status: 403

    error_404:
      type: object
      properties:
        error:
          type: boolean
        data: 
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        status:
          type: integer
      example:
        error: 'true'
        data: ['API Route not found']
        warnings: []
        status: 404
    # response_200:
    #   type: object
    #   properties:
    #     data:
    #       type: object
    #       oneOf: 
    #         - $ref: '#/components/schemas/clientGroup'
    #         - $ref: '#/components/schemas/user'
    #         - $ref: '#/components/schemas/clientCategory'
    #         - $ref: '#/components/schemas/client'
    #         - $ref: '#/components/schemas/cluster'
    #         - $ref: '#/components/schemas/dataType'
    #         - $ref: '#/components/schemas/dateRange'
    #         - $ref: '#/components/schemas/dataProfile'
    #         - $ref: '#/components/schemas/category'
    #         - $ref: '#/components/schemas/language'
    #         - $ref: '#/components/schemas/lead'
    #         - $ref: '#/components/schemas/role'
    #         - $ref: '#/components/schemas/simpleService'
    #         - $ref: '#/components/schemas/serviceInfo'
    #         - $ref: '#/components/schemas/orderItem'
    #         - $ref: '#/components/schemas/serviceData'
    #     error:
    #       type: boolean
    #     warnings:
    #       type: array
    #       items:
    #         type: string
    #     status: 
    #       type: integer
          
    response_200_clusters:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/cluster'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer      

    response_200_categories:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/category'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer

    response_200_clients:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/client'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer 
          
    response_200_new_edit_client_user:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer          

    response_200_clientcategories:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/clientCategory'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_clientgroups:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/clientGroup'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_dataprofiles:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/dataProfile'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_datatypes:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/dataType'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_daterange:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/dateRange'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer 
          
    response_200_languages:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/language'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_leads:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/lead'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_roles:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/role'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_services:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/simpleService'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_servicesdataview:
      type: object
      properties:
        data:
          type: object
          # IMPORTANT:
          # this reference Model is incorrect, please create a new Model once
          # you can test the response
          $ref: '#/components/schemas/serviceDataViewField'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_servicesinfo:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/serviceInfo'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer    
          
    response_200_servicesorderitem:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/orderItem'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          
    response_200_users:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/user'
        error:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        status: 
          type: integer
          

        
        

  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      description: |

        The **TapClicks** API uses the OAuth 2.0 protocol for authentication and authorization.
        
        As a first step, you can request your OAuth client credentials by sending an email to api-developer@tapclicks.com. You will need to provide a valid and active TapClicks account *email address* and the complete domain name that you have access to (*https://<span></span>your_instance.tapclicks.com*).
        This request will be answered by assigning to you a unique Client ID (`<client_id>`) and a unique Client Secret (`<client_secret>`). Make sure to store your Client Secret securely.

        This set of values will allow you to obtain an Access Token (`<access_token>`) that will finally grant you access to the API.
        
        **To obtain the Access Token:**

        ```
        curl -X POST \
        -d "client_id=<client_id>&client_secret=<client_secret>&grant_type=client_credentials" \
        "https://api.tapclicks.com/oauth/accesstoken"
        
        ```

        **Base URL and Authorization Header:**
        The base URL for all API calls is https://api.tapclicks.com/v2
        
        The Access Token needs to be included in every single API call in the Authorization Header as a type Bearer.
        
        ```
        curl -X GET https://api.tapclicks.com/v2/ \
        -H "Authorization: Bearer <access_token>"
        
        ```
        
        **Get New Access Token:**
        The Access Token has a limited lifetime. You can request another Access Token using your client_id and client_secret with a refresh_accesstoken call. 
        
        ```
        curl -X POST -d \
        "client_id=<client_id>&client_secret=<client_secret>&grant_type=client_credentials" \
        "https://api.tapclicks.com/oauth/refresh_accesstoken"
        
        ```

        The Refresh Token also has a limited lifetime. The lifetime (expires_in) is expressed in seconds





        **Possible responses:**

        ```
          Good Response: Status 200 OK

          {
            "access_token": string,
            "expires_in": integer
          }
          
          
          Bad Requests: Status 401 BAD REQUEST
          {
            "access_token": null,
            "expires_in": null
          }          

          Bad Requests: Status 401 BAD REQUEST
          {
            "fault": {
              "faultstring": "Invalid client identifier {0}",
              "detail": {
                "errorcode": "oauth.v2.InvalidClientIdentifier"
              }
            }
          }

          Bad Requests: Status 401 BAD REQUEST
          {
            "fault": {
              "faultstring": "invalid_request",
              "detail": {
                "errorcode": "invalid_request"
              }
            }
          }
          
        ```
        
        
        
        
        **Possible Response Codes:**
        ```
        > 200 - OK: The request was successful and the response body contains 
                    the representation requested
        > 302 - FOUND: A common redirect response; you can GET the representation 
                    at the URL in the Location response header
        > 304 - NOT MODIFIED: Your client's cached version of the representation 
                    is still up to date
        > 400 - BAD REQUEST: The request could not be understood by the server 
                    due to malformed syntax                    
        > 401 - UNAUTHORIZED: The supplied credentials, if any, are not sufficient 
                    to access the resource
        > 404 - NOT FOUND: The server has not found anything matching the 
                    Request-URI
        > 429 - TOO MANY REQUESTS: Your application is sending too many 
                    simultaneous requests
        > 500 - SERVER ERROR: We couldn't return the representation due to 
                    an internal server error
        > 503 - SERVICE UNAVAILABLE: We are temporarily unable to return 
                    the representation. Please wait for a bit and try again.
        
        ```
        ---



      flows: 
        clientCredentials: 
          tokenUrl: https://api.tapclicks.com/oauth/accesstoken
          refreshUrl: https://api.tapclicks.com/oauth/refresh_accesstoken
          scopes: {}
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT           
    
security:
  - bearerAuth: []